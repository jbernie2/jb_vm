{"version":3,"sources":["../src/js/jb_vm.js"],"names":[],"mappings":";;AAAA,IAAM,aAAa,GAAG,EAAE,CAAC;AACzB,IAAM,eAAe,GAAG,EAAE,CAAC;AAC3B,IAAM,gBAAgB,GAAG,EAAE,CAAC;AAC5B,IAAM,gBAAgB,GAAG,EAAE,CAAC;AAC5B,IAAM,eAAe,GAAG,CAAC,CAAC;;AAE1B,IAAM,OAAO,GAAG;AACd,MAAI,EAAG,IAAI;AACX,OAAK,EAAE,IAAI;AACX,KAAG,EAAI,IAAI;CACZ,CAAC;;AAEF,IAAM,SAAS,GAAG;;AAEhB,MAAI,EAAC,GAAG;AACR,MAAI,EAAC,GAAG;AACR,MAAI,EAAC,GAAG;AACR,MAAI,EAAC,GAAG;AACR,MAAI,EAAC,GAAG;AACR,MAAI,EAAC,GAAG;AACR,MAAI,EAAC,GAAG;AACR,MAAI,EAAC,GAAG;;;AAGR,MAAI,EAAC,GAAG;AACR,MAAI,EAAC,GAAG;AACR,MAAI,EAAC,GAAG;AACR,MAAI,EAAC,GAAG;;AAER,IAAE,EAAC,GAAG;;AAEN,IAAE,EAAC,GAAG;;AAEN,IAAE,EAAC,GAAG;;AAEN,IAAE,EAAC,GAAG;CACP,CAAC;;AAEF,IAAI,EAAE,GAAG,CAAC,CAAC;AACX,IAAI,OAAO,GAAG,IAAI,CAAC;AACnB,IAAI,KAAK,GAAG,EAAE,CAAC;AACf,IAAI,SAAS,GAAG;AACd,MAAI,EAAC,CAAC;AACN,MAAI,EAAC,CAAC;AACN,MAAI,EAAC,CAAC;AACN,MAAI,EAAC,CAAC;AACN,MAAI,EAAC,CAAC;AACN,MAAI,EAAC,CAAC;AACN,MAAI,EAAC,CAAC;AACN,MAAI,EAAC,CAAC;;AAEN,MAAI,EAAC,CAAC;AACN,MAAI,EAAC,CAAC;AACN,MAAI,EAAC,EAAE;AACP,MAAI,EAAC,EAAE;AACP,IAAE,EAAC,EAAE;AACL,IAAE,EAAC,EAAE;AACL,IAAE,EAAC,EAAE;AACL,IAAE,EAAC,EAAE;CACN,CAAC;;AAGF,IAAI,IAAI,GAAG,SAAP,IAAI,GAAa;AACnB,SAAO,GAAG,KAAK,CAAC;AAChB,SAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AACvB,SAAO,SAAS,CAAC;CAClB,CAAC;;AAEF,IAAI,KAAK,GAAG,SAAR,KAAK,GAAc;AACrB,SAAO,UAAS,QAAQ,EAAC;AACvB,WAAO,UAAS,OAAO,EAAC;AACtB,eAAS,CAAC,QAAQ,CAAC,GAAG,OAAO,CAAC;AAC9B,aAAO,CAAC,GAAG,CAAC,QAAQ,GAAC,KAAK,GAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;AAChD,aAAO,SAAS,CAAC;KAClB,CAAC;GACH,CAAC;CACH,CAAC;;AAEF,IAAI,GAAG,GAAG,SAAN,GAAG,GAAc;AACnB,SAAO,UAAS,UAAU,EAAC;AACzB,WAAO,UAAS,WAAW,EAAC;AAC1B,aAAO,UAAS,WAAW,EAAC;AAC1B,iBAAS,CAAC,UAAU,CAAC,GAAG,SAAS,CAAC,WAAW,CAAC,GAAG,SAAS,CAAC,WAAW,CAAC,CAAC;AACxE,eAAO,CAAC,GAAG,CAAC,UAAU,GAAC,KAAK,GAAC,WAAW,GAAC,KAAK,GAAC,WAAW,CAAC,CAAC;AAC5D,eAAO,CAAC,GAAG,CAAC,SAAS,CAAC,UAAU,CAAC,GAAC,KAAK,GAAC,SAAS,CAAC,WAAW,CAAC,GAAC,KAAK,GAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC;AAC7F,eAAO,SAAS,CAAC;OAClB,CAAC;KACH,CAAC;GACH,CAAC;CACH,CAAC;;AAEF,IAAI,GAAG,GAAG,SAAN,GAAG,GAAc;AACnB,SAAO,UAAS,UAAU,EAAC;AACzB,WAAO,UAAS,WAAW,EAAC;AAC1B,aAAO,UAAS,WAAW,EAAC;AAC1B,iBAAS,CAAC,UAAU,CAAC,GAAG,SAAS,CAAC,WAAW,CAAC,GAAG,SAAS,CAAC,WAAW,CAAC,CAAC;AACxE,eAAO,CAAC,GAAG,CAAC,UAAU,GAAC,KAAK,GAAC,WAAW,GAAC,KAAK,GAAC,WAAW,CAAC,CAAC;AAC5D,eAAO,CAAC,GAAG,CAAC,SAAS,CAAC,UAAU,CAAC,GAAC,KAAK,GAAC,SAAS,CAAC,WAAW,CAAC,GAAC,KAAK,GAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC;AAC7F,eAAO,SAAS,CAAC;OAClB,CAAC;KACH,CAAC;GACH,CAAC;CACH,CAAC;;AAEF,IAAI,GAAG,GAAG,SAAN,GAAG,GAAc;AACnB,SAAO,UAAS,UAAU,EAAC;AACzB,WAAO,UAAS,WAAW,EAAC;AAC1B,aAAO,UAAS,WAAW,EAAC;AAC1B,iBAAS,CAAC,UAAU,CAAC,GAAG,SAAS,CAAC,WAAW,CAAC,GAAG,SAAS,CAAC,WAAW,CAAC,CAAC;AACxE,eAAO,CAAC,GAAG,CAAC,UAAU,GAAC,KAAK,GAAC,WAAW,GAAC,KAAK,GAAC,WAAW,CAAC,CAAC;AAC5D,eAAO,CAAC,GAAG,CAAC,SAAS,CAAC,UAAU,CAAC,GAAC,KAAK,GAAC,SAAS,CAAC,WAAW,CAAC,GAAC,KAAK,GAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC;AAC7F,eAAO,SAAS,CAAC;OAClB,CAAC;KACH,CAAC;GACH,CAAC;CACH,CAAC;;AAEF,IAAI,GAAG,GAAG,SAAN,GAAG,GAAc;AACnB,SAAO,UAAS,UAAU,EAAC;AACzB,WAAO,UAAS,WAAW,EAAC;AAC1B,aAAO,UAAS,WAAW,EAAC;AAC1B,iBAAS,CAAC,UAAU,CAAC,GAAG,SAAS,CAAC,WAAW,CAAC,GAAG,SAAS,CAAC,WAAW,CAAC,CAAC;AACxE,eAAO,CAAC,GAAG,CAAC,UAAU,GAAC,KAAK,GAAC,WAAW,GAAC,KAAK,GAAC,WAAW,CAAC,CAAC;AAC5D,eAAO,CAAC,GAAG,CAAC,SAAS,CAAC,UAAU,CAAC,GAAC,KAAK,GAAC,SAAS,CAAC,WAAW,CAAC,GAAC,KAAK,GAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC;AAC7F,eAAO,SAAS,CAAC;OAClB,CAAC;KACH,CAAC;GACH,CAAC;CACH,CAAC;;AAEF,IAAI,YAAY,GAAG;AACjB,MAAI,EAAC,IAAI;AACT,OAAK,EAAC,KAAK;AACX,KAAG,EAAC,GAAG;AACP,KAAG,EAAC,GAAG;AACP,KAAG,EAAC,GAAG;AACP,KAAG,EAAC,GAAG;CACR,CAAC;;AAEF,IAAI,KAAK,GAAG,SAAR,KAAK,GAAa;AACpB,MAAI,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;AACpB,IAAE,IAAI,CAAC,CAAC;AACR,SAAO,IAAI,CAAC;CACb,CAAC;;AAEF,IAAI,MAAM,GAAG,SAAT,MAAM,CAAY,KAAK,EAAC;AAC1B,SAAO;AACL,UAAM,EAAK,CAAC,KAAK,GAAG,UAAU,CAAA,KAAM,aAAa;AACjD,YAAQ,EAAG,CAAC,KAAK,GAAG,UAAU,CAAA,KAAM,eAAe;AACnD,aAAS,EAAE,CAAC,KAAK,GAAG,UAAU,CAAA,KAAM,gBAAgB;AACpD,aAAS,EAAE,CAAC,KAAK,GAAG,UAAU,CAAA,KAAM,gBAAgB;AACpD,YAAQ,EAAG,CAAC,KAAK,GAAG,UAAU,CAAA,KAAM,eAAe;GACpD,CAAC;CACH,CAAC;;AAEF,IAAI,QAAQ,GAAG,CAAA,YAAU;AACvB,MAAI,6BAA6B,CAAC;AAClC,SAAO,UAAS,GAAG,EAAC;AAClB,QAAG,6BAA6B,KAAK,SAAS,EAAC;AAC7C,mCAA6B,GAAG,6BAA6B,CAAC,GAAG,CAAC,CAAC;AACnE,UAAG,OAAO,6BAA6B,KAAK,UAAU,EAAC;AACrD,qCAA6B,GAAG,SAAS,CAAC;OAC3C;KACF,MAAI;AACH,mCAA6B,GAAG,YAAY,CAAC,GAAG,CAAC,EAAE,CAAC;KACrD;GACF,CAAC;CACH,CAAA,EAAE,CAAC;;AAEJ,IAAI,IAAI,GAAG,SAAP,IAAI,GAAa;AACnB,SAAM,OAAO,EAAC;AACZ,YAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;GACnB;CACF,CAAC;;AAEF,IAAI,gBAAgB,GAAG,SAAnB,gBAAgB,CAAY,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EACpE,QAAQ,EAAC;AACT,MAAI,KAAK,CAAC;AACV,MAAI,GAAG,CAAC;AACR,MAAG,MAAM,EAAC;AACR,QAAI,EAAE,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AACzB,SAAK,GAAG,IAAI,CAAC,KAAK,EAAC,EAAE,EAAC,aAAa,CAAC,CAAC;GACtC;AACD,MAAG,QAAQ,EAAC;AACV,OAAG,GAAG,SAAS,CAAC,QAAQ,CAAC,CAAC;AAC1B,SAAK,GAAG,IAAI,CAAC,KAAK,EAAC,GAAG,EAAC,eAAe,CAAC,CAAC;GACzC;AACD,MAAG,SAAS,EAAC;AACX,OAAG,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC;AAC3B,SAAK,GAAG,IAAI,CAAC,KAAK,EAAC,GAAG,EAAC,gBAAgB,CAAC,CAAC;GAC1C;AACD,MAAG,SAAS,EAAC;AACX,OAAG,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC;AAC3B,SAAK,GAAG,IAAI,CAAC,KAAK,EAAC,GAAG,EAAC,gBAAgB,CAAC,CAAC;GAC1C;AACD,MAAG,QAAQ,EAAC;AACV,SAAK,GAAG,IAAI,CAAC,KAAK,EAAC,QAAQ,EAAC,eAAe,CAAC,CAAC;GAC9C;AACD,SAAO,KAAK,CAAC;CACd,CAAC;;AAEF,IAAI,IAAI,GAAG,SAAP,IAAI,CAAY,KAAK,EAAC,KAAK,EAAC,MAAM,EAAC;AACrC,SAAO,KAAK,GAAI,KAAK,IAAI,MAAM,AAAC,CAAC;CAClC,CAAC;;AAEF,IAAI,IAAI,GAAG,CACT,OAAO,EAAE,MAAM,EAAE,CAAC,EAClB,OAAO,EAAE,MAAM,EAAE,CAAC,EAClB,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAC7B,MAAM,CACP,CAAC;;AAEF,IAAI,EAAE,CAAC;;AAEP,OAAO,CAAC,GAAG,CAAC,wBAAwB,GAAE,gBAAgB,CAAC,OAAO,EAAC,MAAM,EAAC,IAAI,EAAC,IAAI,EAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC","file":"jb_vm-debug.js","sourcesContent":["const OPCODE_OFFSET = 24;\nconst DEST_REG_OFFSET = 20;\nconst SRC_REG_1_OFFSET = 16;\nconst SRC_REG_2_OFFSET = 12; \nconst CONSTANT_OFFSET = 0;\n\nconst OPCODES = {\n  halt : 0x00,\n  loadi: 0x01,\n  add  : 0x02\n};\n\nconst REGISTERS = {\n  //general purpose registers\n  reg0:0x0,\n  reg1:0x1,\n  reg2:0x2,\n  reg3:0x3,\n  reg4:0x4,\n  reg5:0x5,\n  reg6:0x6,\n  reg7:0x7,\n\n  //special purpose registers\n  reg8:0x8,\n  reg9:0x9,\n  rega:0xa,\n  regb:0xb,\n  //pointer to video memory\n  vm:0xc,\n  //pointer to interupt handler\n  ih:0xd,\n  //stack pointer\n  sp:0xe,\n  //program counter\n  pc:0xf,\n};\n\nvar pc = 0;\nvar running = true;\nvar stack = [];\nvar registers = {\n  reg0:0,\n  reg1:1,\n  reg2:2,\n  reg3:3,\n  reg4:4,\n  reg5:5,\n  reg6:6,\n  reg7:7,\n\n  reg8:8,\n  reg9:9,\n  rega:10,\n  regb:11,\n  vm:12,\n  ih:13,\n  sp:14,\n  pc:15\n};\n\n\nvar halt = function(){\n  running = false;\n  console.log(\"halting\");\n  return undefined;\n};\n\nvar loadi = function() {\n  return function(register){\n    return function(integer){\n      registers[register] = integer;\n      console.log(register+\" = \"+registers[register]);\n      return undefined;\n    };\n  };\n};\n\nvar add = function() {\n  return function(result_reg){\n    return function(addend_reg1){\n      return function(addend_reg2){\n        registers[result_reg] = registers[addend_reg1] + registers[addend_reg2];\n        console.log(result_reg+\" = \"+addend_reg1+\" + \"+addend_reg2);\n        console.log(registers[result_reg]+\" = \"+registers[addend_reg1]+\" + \"+registers[addend_reg2]);\n        return undefined;\n      };\n    };\n  };\n};\n\nvar sub = function() {\n  return function(result_reg){\n    return function(addend_reg1){\n      return function(addend_reg2){\n        registers[result_reg] = registers[addend_reg1] - registers[addend_reg2];\n        console.log(result_reg+\" = \"+addend_reg1+\" - \"+addend_reg2);\n        console.log(registers[result_reg]+\" = \"+registers[addend_reg1]+\" - \"+registers[addend_reg2]);\n        return undefined;\n      };\n    };\n  };\n};\n\nvar mul = function() {\n  return function(result_reg){\n    return function(addend_reg1){\n      return function(addend_reg2){\n        registers[result_reg] = registers[addend_reg1] * registers[addend_reg2];\n        console.log(result_reg+\" = \"+addend_reg1+\" * \"+addend_reg2);\n        console.log(registers[result_reg]+\" = \"+registers[addend_reg1]+\" * \"+registers[addend_reg2]);\n        return undefined;\n      };\n    };\n  };\n};\n\nvar div = function() {\n  return function(result_reg){\n    return function(addend_reg1){\n      return function(addend_reg2){\n        registers[result_reg] = registers[addend_reg1] / registers[addend_reg2];\n        console.log(result_reg+\" = \"+addend_reg1+\" / \"+addend_reg2);\n        console.log(registers[result_reg]+\" = \"+registers[addend_reg1]+\" / \"+registers[addend_reg2]);\n        return undefined;\n      };\n    };\n  };\n};\n\nvar instructions = {\n  halt:halt,\n  loadi:loadi,\n  add:add,\n  sub:sub,\n  mul:mul,\n  div:div\n};\n\nvar fetch = function(){\n  var next = prog[pc];\n  pc += 1;\n  return next;\n};\n\nvar decode = function(instr){\n  return {\n    opcode   : (instr & 0xFF000000) >>> OPCODE_OFFSET, \n    dest_reg : (instr & 0x00F00000) >>> DEST_REG_OFFSET,\n    src_reg_1: (instr & 0x000F0000) >>> SRC_REG_1_OFFSET,\n    src_reg_2: (instr & 0x0000F000) >>> SRC_REG_2_OFFSET,\n    constant : (instr & 0x0000FFFF) >>> CONSTANT_OFFSET\n  }; \n};\n\nvar evaluate = function(){\n  var partially_applied_instruction;\n  return function(arg){\n    if(partially_applied_instruction !== undefined){\n      partially_applied_instruction = partially_applied_instruction(arg);\n      if(typeof partially_applied_instruction !== \"function\"){\n        partially_applied_instruction = undefined;\n      }\n    }else{\n      partially_applied_instruction = instructions[arg]();\n    }\n  };\n}();\n\nvar main = function(){\n  while(running){\n    evaluate(fetch());\n  }\n};\n\nvar pack_instruction = function(opcode, dest_reg, src_reg_1, src_reg_2, \n  constant){\n  var instr;\n  var reg;\n  if(opcode){\n    var op = OPCODES[opcode];\n    instr = pack(instr,op,OPCODE_OFFSET);\n  }\n  if(dest_reg){\n    reg = REGISTERS[dest_reg];\n    instr = pack(instr,reg,DEST_REG_OFFSET);\n  } \n  if(src_reg_1){\n    reg = REGISTERS[src_reg_1];\n    instr = pack(instr,reg,SRC_REG_1_OFFSET);\n  }\n  if(src_reg_2){\n    reg = REGISTERS[src_reg_2];\n    instr = pack(instr,reg,SRC_REG_2_OFFSET);\n  }\n  if(constant){\n    instr = pack(instr,constant,CONSTANT_OFFSET);\n  }\n  return instr;\n};\n\nvar pack = function(instr,field,offset){\n  return instr | (field << offset);\n};\n\nvar prog = [\n  \"loadi\", \"reg1\", 1,\n  \"loadi\", \"reg2\", 2,\n  \"add\", \"reg3\", \"reg1\", \"reg2\",\n  \"halt\" \n];\n\nmain();\n\nconsole.log(\"packing loadi reg1 5: \"+ pack_instruction(\"loadi\",\"reg1\",null,null,5).toString(16));\n"]}